name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write      # Required for creating releases and pushing commits
  id-token: write     # Required for NPM provenance publishing

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: darwin
            goarch: amd64
            suffix: darwin-amd64
          - goos: darwin
            goarch: arm64
            suffix: darwin-arm64
          - goos: linux
            goarch: amd64
            suffix: linux-amd64
          - goos: linux
            goarch: arm64
            suffix: linux-arm64
          - goos: windows
            goarch: amd64
            suffix: windows-amd64
            ext: .exe

    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b  # v4.1.4

      - name: Set up Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491  # v5.0.0
        with:
          go-version: '1.24'

      - name: Tidy modules
        run: go mod tidy
        
      - name: Security Scan
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...
        
      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          go build -ldflags="-s -w -X main.version=${VERSION}" -o mailos${{ matrix.ext }} .

      - name: Create archive
        run: |
          tar czf mailos-${{ matrix.suffix }}.tar.gz mailos${{ matrix.ext }}

      - name: Upload artifact
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3  # v4.3.1
        with:
          name: mailos-${{ matrix.suffix }}
          path: mailos-${{ matrix.suffix }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b  # v4.1.4

      - name: Download artifacts
        uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e  # v4.1.7
        with:
          path: artifacts

      - name: Generate Security Metadata
        run: |
          echo "## Security Information" > security-info.md
          echo "- **Build Date:** $(date -u)" >> security-info.md
          echo "- **Go Version:** $(go version)" >> security-info.md
          echo "- **Commit SHA:** ${GITHUB_SHA}" >> security-info.md
          echo "- **Vulnerability Scan:** Passed" >> security-info.md
          echo "- **Signed:** Yes (GitHub attestation)" >> security-info.md
          echo "" >> security-info.md
          echo "### Verification" >> security-info.md
          echo "\`\`\`bash" >> security-info.md
          echo "# Verify release authenticity:" >> security-info.md
          echo "gh attestation verify mailos-*.tar.gz --owner anduimagui" >> security-info.md
          echo "\`\`\`" >> security-info.md

      - name: Create Release
        uses: softprops/action-gh-release@a74c6b72af54cfa997e81df42d94703d6313a2d0  # v2.0.6
        with:
          files: artifacts/**/*.tar.gz
          draft: false
          prerelease: false
          generate_release_notes: true
          append_body: true
          body_path: security-info.md

  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b  # v4.1.4

      - name: Download artifacts
        uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e  # v4.1.7
        with:
          path: artifacts

      - name: Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8  # v4.0.2
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          token: ${{ secrets.NPM_TOKEN }}

      - name: Verify package version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          cd npm
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "Package version: $PACKAGE_VERSION"
          echo "Expected version: $VERSION"

      - name: Prepare NPM package with all platform binaries
        run: |
          cd npm
          mkdir -p bin
          echo "Preparing NPM package with all platform binaries..."
          
          # Extract all platform binaries from artifacts
          for platform in darwin-amd64 darwin-arm64 linux-amd64 linux-arm64 windows-amd64; do
            echo "Processing mailos-${platform}..."
            
            # Extract binary from artifact tar.gz
            tar -xzf "../artifacts/mailos-${platform}/mailos-${platform}.tar.gz" -C .
            
            # Move binary to bin directory with platform suffix
            if [[ "$platform" == "windows-amd64" ]]; then
              mv mailos.exe "bin/mailos-${platform}.exe"
            else
              mv mailos "bin/mailos-${platform}"
            fi
          done
          
          echo "Prepared binaries for NPM package:"
          ls -la bin/

      - name: Publish to npm
        run: |
          cd npm
          echo "Checking npm whoami..."
          npm whoami
          echo "Publishing package..."
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  update-homebrew:
    needs: [release, publish-npm]
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b  # v4.1.4

      - name: Download macOS binary for SHA
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Downloading release asset with GitHub authentication..."
          # Use gh to download the release asset with authentication
          for i in {1..10}; do
            if gh release download "${VERSION}" --pattern "mailos-darwin-amd64.tar.gz" --clobber; then
              echo "Successfully downloaded mailos-darwin-amd64.tar.gz"
              break
            fi
            echo "Waiting for release assets... attempt $i/10"
            sleep 30
          done
          if [ ! -f mailos-darwin-amd64.tar.gz ]; then
            echo "Failed to download release asset after 5 minutes"
            exit 1
          fi
          SHA256=$(sha256sum mailos-darwin-amd64.tar.gz | cut -d' ' -f1)
          echo "SHA256=${SHA256}" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Homebrew formula
        run: |
          # Update version in URL line only
          sed -i "s|archive/refs/tags/v[0-9.]*\.tar\.gz|archive/refs/tags/${VERSION}.tar.gz|g" Formula/mailos.rb
          # Update SHA256 placeholder
          sed -i "s/PLACEHOLDER_SHA256/${SHA256}/g" Formula/mailos.rb
          echo "Updated Homebrew formula:"
          cat Formula/mailos.rb

      - name: Commit Homebrew formula update
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          if git diff --quiet Formula/mailos.rb; then
            echo "No changes to Homebrew formula"
          else
            git add Formula/mailos.rb
            git commit -m "Update Homebrew formula to ${VERSION}"
            git push origin HEAD:main
            echo "âœ… Homebrew formula updated to ${VERSION}"
          fi