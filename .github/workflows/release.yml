name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: darwin
            goarch: amd64
            suffix: darwin-amd64
          - goos: darwin
            goarch: arm64
            suffix: darwin-arm64
          - goos: linux
            goarch: amd64
            suffix: linux-amd64
          - goos: linux
            goarch: arm64
            suffix: linux-arm64
          - goos: windows
            goarch: amd64
            suffix: windows-amd64
            ext: .exe

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Tidy modules
        run: go mod tidy
        
      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          go build -ldflags="-s -w -X main.version=${VERSION}" -o mailos${{ matrix.ext }} .

      - name: Create archive
        run: |
          tar czf mailos-${{ matrix.suffix }}.tar.gz mailos${{ matrix.ext }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: mailos-${{ matrix.suffix }}
          path: mailos-${{ matrix.suffix }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*.tar.gz
          draft: false
          prerelease: false
          generate_release_notes: true

  publish-npm:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          token: ${{ secrets.NPM_TOKEN }}

      - name: Verify package version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          cd npm
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "Package version: $PACKAGE_VERSION"
          echo "Expected version: $VERSION"

      - name: Publish to npm
        run: |
          cd npm
          echo "Checking npm whoami..."
          npm whoami
          echo "Publishing package..."
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  update-homebrew:
    needs: [release, publish-npm]
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - name: Download macOS binary for SHA
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Downloading release asset with GitHub authentication..."
          # Use gh to download the release asset with authentication
          for i in {1..10}; do
            if gh release download "${VERSION}" --pattern "mailos-darwin-amd64.tar.gz" --clobber; then
              echo "Successfully downloaded mailos-darwin-amd64.tar.gz"
              break
            fi
            echo "Waiting for release assets... attempt $i/10"
            sleep 30
          done
          if [ ! -f mailos-darwin-amd64.tar.gz ]; then
            echo "Failed to download release asset after 5 minutes"
            exit 1
          fi
          SHA256=$(sha256sum mailos-darwin-amd64.tar.gz | cut -d' ' -f1)
          echo "SHA256=${SHA256}" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Homebrew formula
        run: |
          # Update version in URL line only
          sed -i "s|archive/refs/tags/v[0-9.]*|archive/refs/tags/${VERSION}|g" Formula/mailos.rb
          # Update SHA256 placeholder
          sed -i "s/PLACEHOLDER_SHA256/${SHA256}/g" Formula/mailos.rb
          echo "Updated Homebrew formula:"
          cat Formula/mailos.rb

      - name: Commit Homebrew formula update
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          if git diff --quiet Formula/mailos.rb; then
            echo "No changes to Homebrew formula"
          else
            git add Formula/mailos.rb
            git commit -m "Update Homebrew formula to ${VERSION}"
            git push origin HEAD:main
            echo "âœ… Homebrew formula updated to ${VERSION}"
          fi